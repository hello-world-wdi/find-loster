{"version":3,"sources":["api.js","Lost.js","Details.js","MapContainer.js","Nav.js","NewLostInf.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","rules",".read",".write","api","losses","axios","method","url","getCity","Lost","state","city","_this","props","componentDidMount","copyLosses","slice","then","response","data","records","map","_ref","fields","setState","filter","lose","countydisplaynameoflastcontact","catch","error","console","log","componentWillMount","database","ref","on","snapshot","lastLocationObject","Object","keys","val","length","cityCopy","react_default","a","createElement","className","this","lost","key","image","id","firstname","dateoflastcontact","react_router_dom","to","concat","Component","defaultProps","Details","_this2","match","params","_ref2","middlename","lastname","gender","computedmissingmaxage","currentagefrom","MapContainer","userLocation","lat","lng","loading","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","cityIndex","plus_code","compound_code","indexOf","location","update","_this$state","google","dist","initialCenter","zoom","onClick","onMarkerClick","name","GoogleApiWrapper","Nav","NewLostInf","formData","phone","age","date","handelChange","event","value","target","copyFormData","assign","includes","handelSubmit","preventDefault","push","history","_React$createElement","_React$createElement2","onSubmit","type","onChange","placeholder","defineProperty","class","React","App","src_Nav","react_router","exact","path","component","Boolean","window","hostname","AppJsx","src_App_0","rootElement","document","getElementById","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.868092fc.chunk.js","sourcesContent":["import axios from 'axios';\nimport firebase from 'firebase';\n\nconst losses = () => {\n  return axios({\n    method: 'get',\n    url: 'https://public.opendatasoft.com/api/records/1.0/search/?dataset=namus-missings&facet=cityoflastcontact&facet=countydisplaynameoflastcontact&facet=raceethnicity&facet=statedisplaynameoflastcontact&facet=gender'\n  })\n}\n\n const config = {\n  apiKey: \"AIzaSyCTbBcJZLB5hmPm3LEpQXMkrbc60eOgQYc\",\n    authDomain: \"learningtoreact.firebaseapp.com\",\n    databaseURL: \"https://learningtoreact.firebaseio.com\",\n    projectId: \"learningtoreact\",\n    storageBucket: \"\",\n    messagingSenderId: \"203802469519\",\n    appId: \"1:203802469519:web:2ddcf658d709d916\",\n  \"rules\": {\n    \".read\": \"auth != null\",\n    \".write\": \"auth != null\"\n  }\n  \n};\nfirebase.initializeApp(config);\n\nconst getCity = () => {\n  return axios({\n    method: 'get',\n    url: 'https://maps.googleapis.com/maps/api/geocode/json?latlng=21.5678976,39.1856128&key=AIzaSyDIAICVZcHIUeFjNMsHhoNoYcKHuYWdCuY'\n  })\n}\nconst api = {\n  losses : losses,\n  firebase : firebase,\n  getCity: getCity\n}\n\nexport default api;","import React, {Component} from  'react';\nimport \"./Lost.css\";\nimport api from './api';\nimport { Link } from 'react-router-dom';\nimport App from './App';\nclass Lost extends Component {\n\n    state = {\n        losses: [],\n        city: this.props.city,\n    }\n\n    componentDidMount = () => {\n        let copyLosses = this.state.losses.slice();\n        api.losses()\n        .then(response => {\n            copyLosses = response.data.records.map(({fields}) => fields)\n            this.setState({\n                losses: copyLosses.filter(lose => lose.countydisplaynameoflastcontact === this.state.city)\n            });\n        })\n        .catch(error => console.log(error))\n    }\n\n    componentWillMount = () => {\n        const locationRef = api.firebase.database().ref('location');\n        locationRef.on('value', (snapshot) => {\n            const lastLocationObject = Object.keys(snapshot.val())[Object.keys(snapshot.val()).length - 1];\n            let cityCopy = snapshot.val()[lastLocationObject].city;\n            this.setState({\n                city: cityCopy\n            })\n          });\n        \n        \n    }\n    \n    render(){\n        return (\n            <div className=\"lost\">\n                {this.state.losses.map(lost => \n                <div key={lost.image.id}>\n                    <h1>{lost.firstname}</h1>\n                    <h3>{lost.countydisplaynameoflastcontact}</h3>\n                    <p>{lost.dateoflastcontact}</p>\n                    <Link to={`lost/details/${lost.image.id}`}>Show more</Link>\n                    <hr />\n                </div>\n                )}\n            </div>\n            \n        )\n    }\n}\n\nLost.defaultProps = {\n    city: 'San Diego'\n}\n\nexport default Lost;","import React, {Component} from 'react';\nimport './Details.css';\nimport api from './api';\nclass Details extends Component {\n\n    state = {\n        losses: []\n    }\n    componentDidMount = () => {\n        let copyLosses = this.state.losses.slice();\n        api.losses()\n        .then(response => {\n            copyLosses = response.data.records.map(({fields}) => fields)\n            this.setState({\n                losses: copyLosses\n            });\n        })\n        .catch(error => console.log(error))\n        \n    }\n\n    render(){\n        const lost = this.state.losses.filter(lost => lost.image.id === this.props.match.params.id)\n        console.log(lost[0])\n        return (\n            <div className='Details'>\n               {lost.map(({firstname, middlename, lastname, countydisplaynameoflastcontact, dateoflastcontact, image, gender, computedmissingmaxage, currentagefrom}) => \n                   <div key={image.id}>\n                       <h1>{`${firstname} ${middlename} ${lastname}`}</h1>\n                       <p>{gender}</p>\n                       <h3>{countydisplaynameoflastcontact}</h3>\n                       <h3>{dateoflastcontact}</h3>\n                       <h4>{computedmissingmaxage} || {currentagefrom}</h4>\n                   </div>\n               )}\n            </div>\n        )\n    }\n}\n\nexport default Details;\n","import React, {Component} from 'react';\nimport {Map, Marker, GoogleApiWrapper, Geocoder} from 'google-maps-react';\nimport api from './api'\nclass MapContainer extends Component{\n  // To get latitude and longitude of current user location \n  state = { \n    userLocation: { \n            lat: 32, \n            lng: 32 \n          }, \n    loading: true \n    };\n\n  componentDidMount(props) {\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        const { latitude, longitude } = position.coords;\n        //Change the userLocation value \n        this.setState({\n          userLocation: { lat: latitude, lng: longitude },\n          loading: false\n        });\n        \n        api.getCity()\n        .then(response => {\n          const database = api.firebase.database();\n          let cityIndex = response.data.plus_code.compound_code.indexOf(',') + 2;\n          let location = response.data.plus_code.compound_code.slice(cityIndex);\n          location = location.slice(0, location.indexOf(' '));\n          const locationRef = database.ref('location').update({\n            city: location\n          }).then(\n            () => console.log('City updated'),\n            error => console.log(`City not updated because ${error}`)\n          )\n        })\n        \n        \n      },\n      () => {\n        //Change the loading value \n        this.setState({ loading: false });\n      }\n    );\n  }\n\n  render(){\n    const { loading, userLocation } = this.state;\n    const { google } = this.props;\n\n    if (loading) {\n      return null;\n    }\n    \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <Map google={google} initialCenter={userLocation} zoom={14} >\n                {/* { console.log(this.state.userLocation.lat) }\n                { console.log(this.state.userLocation.lng) } */}\n                <Marker onClick={this.onMarkerClick}  name={'Current location'} />\n            </Map>\n        </header>\n      </div>\n    );\n  }\n}\n\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDIAICVZcHIUeFjNMsHhoNoYcKHuYWdCuY\"\n})(MapContainer)\n\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom'\n\nclass Nav extends Component{\n    render(){\n        return (\n            <div>\n                <Link to=\"/\">Home</Link>\n                <br/>\n                <Link to=\"/lost\">Help</Link>\n                <br/>\n                <Link to=\"/newLostInf\">New Lost</Link>\n            </div>\n        )\n    }\n}\n\nexport default Nav;","import React, { Component } from \"react\";\nimport './NewLostInf.css';\nimport { Redirect } from 'react-router-dom'\nimport api from './api'\nclass NewLostInf extends React.Component {\n  state = {\n    formData: {\n        name: '',\n        phone: '',\n        lose: {\n          name: '',\n          gender: '',\n          city: '',\n          age: '',\n          date: '',\n      }\n    },\n  };\n  handelChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    const copyFormData = Object.assign(this.state.formData);\n    if(name.includes('u'))\n      copyFormData[name.slice(1)] = value;\n    else\n      copyFormData.lose[name] = value;\n    this.setState({\n      formData: copyFormData\n    });\n  }\n\n  handelSubmit = event => {\n    event.preventDefault();\n    api.firebase.database().ref().push(this.state.formData).then(\n      () => console.log('Data Saved'),\n      error => console.log(`Data not Saved: ${error}`)\n    )\n    this.props.history.push(`/lost`);\n  }\n  render() {\n    return (\n      <main className='NewLostInf'>\n                <aside className=\"section1\">\n      \n      <form onSubmit={this.handelSubmit}>\n        <div id=\"first\">\n       <h3>Lose Information</h3>\n        <label>Name </label>\n        <input name='name' type='text' className=\"BoxForm\"  value={this.state.formData.lose.name} onChange={this.handelChange}/><br/><br/>\n        <label>City </label>\n        <input name='city'type='text' placeholder=\" Name\" className=\"BoxForm\"  value={this.state.formData.lose.city} onChange={this.handelChange}/><br/><br/>\n        <label>Age </label>\n        <input name='age' className=\"BoxForm\"  type='number' value={this.state.formData.lose.age} onChange={this.handelChange}/><br/><br/>\n        <label>Date </label>\n        <input name='date' className=\"BoxForm\"  type='date' value={this.state.formData.lose.date} onChange={this.handelChange}/><br/><br/>\n        <label className=\"genderSpace\">Gender: </label>\n        <input name=\"gender\" value='male' type=\"radio\" value={this.state.formData.lose.gender} onChange={this.handelChange}/>Male\n        <input name=\"gender\" value='female' type=\"radio\" value={this.state.formData.lose.gender} onChange={this.handelChange}/>Female\n\n        </div>\n      </form>\n      </aside>\n\n      <hr class=\"hr\"/>\n\n         <aside className=\"section2\">\n        <form onSubmit={this.handelSubmit}>\n          <div id=\"first\">\n          <h3>Your Information</h3>\n          <label>Name</label>\n          <input   className=\"BoxForm\" name='uname' type='text' value={this.state.formData.name} onChange={this.handelChange}/><br/><br/>\n          <label>Phone</label>\n          <input className=\"BoxForm\" name='uphone'type='text' value={this.state.formData.phone} onChange={this.handelChange}/><br/><br/>\n\n          <div className=\"submit\">\n          <input type='Submit' value='Save' />\n          </div>\n\n          </div>\n        </form>\n        </aside>\n        \n\n      </main>\n    );\n  }\n}\n\nexport default NewLostInf;\n","import React, {Component} from 'react';\nimport './App.css';\nimport Lost from './Lost';\nimport { Route } from 'react-router-dom';\nimport Details from './Details';\nimport MapContainer from './MapContainer'\nimport Nav from './Nav';\nimport NewLostInf from './NewLostInf'\nclass App extends React.Component {\n  render(){\n    \n    return (\n      <div className=\"App\">\n        <Nav />\n        <Route exact path='/' component={MapContainer} />\n        <Route exact path='/lost/' component={Lost} />\n        <Route exact path='/lost/details/:id' component={Details} />\n        <Route exact path='/newLostInf' component={NewLostInf} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import { HashRouter } from 'react-router-dom'\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst AppJsx = (\n    <HashRouter>\n      <App />\n    </HashRouter>\n  )\n  \n  const rootElement = document.getElementById(\"root\");\n  ReactDOM.render(AppJsx, rootElement);\n  \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}